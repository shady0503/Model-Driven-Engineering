package com.healthcare.system.HealthcareAPI.service;

import com.healthcare.system.HealthcareAPI.entity.MedicalRecords;
import com.healthcare.system.HealthcareAPI.repository.MedicalRecordsRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;


/**
 * Service class for MedicalRecords entity
 * Generated by MDE Backend Generator
 */
@Service
@Transactional
public class MedicalRecordsService {

    private final MedicalRecordsRepository repository;

    public MedicalRecordsService(MedicalRecordsRepository repository) {
        this.repository = repository;
    }

    /**
     * Create a new MedicalRecords
     */
    public MedicalRecords create(MedicalRecords entity) {
        return repository.save(entity);
    }

    /**
     * Find MedicalRecords by ID
     */
    public Optional<MedicalRecords> findById(Integer id) {
        return repository.findById(id);
    }

    /**
     * Get all MedicalRecords entities
     */
    public List<MedicalRecords> findAll() {
        return repository.findAll();
    }

    /**
     * Update an existing MedicalRecords
     */
    public MedicalRecords update(Integer id, MedicalRecords entity) {
        if (!repository.existsById(id)) {
            throw new RuntimeException("MedicalRecords not found with id: " + id);
        }
        entity.setId(id);
        return repository.save(entity);
    }

    /**
     * Delete MedicalRecords by ID
     */
    public void delete(Integer id) {
        repository.deleteById(id);
    }

    /**
     * Check if MedicalRecords exists by ID
     */
    public boolean exists(Integer id) {
        return repository.existsById(id);
    }
}
