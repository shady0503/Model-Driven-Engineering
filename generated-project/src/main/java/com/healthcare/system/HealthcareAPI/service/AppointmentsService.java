package com.healthcare.system.HealthcareAPI.service;

import com.healthcare.system.HealthcareAPI.entity.Appointments;
import com.healthcare.system.HealthcareAPI.repository.AppointmentsRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;


/**
 * Service class for Appointments entity
 * Generated by MDE Backend Generator
 */
@Service
@Transactional
public class AppointmentsService {

    private final AppointmentsRepository repository;

    public AppointmentsService(AppointmentsRepository repository) {
        this.repository = repository;
    }

    /**
     * Create a new Appointments
     */
    public Appointments create(Appointments entity) {
        return repository.save(entity);
    }

    /**
     * Find Appointments by ID
     */
    public Optional<Appointments> findById(Integer id) {
        return repository.findById(id);
    }

    /**
     * Get all Appointments entities
     */
    public List<Appointments> findAll() {
        return repository.findAll();
    }

    /**
     * Update an existing Appointments
     */
    public Appointments update(Integer id, Appointments entity) {
        if (!repository.existsById(id)) {
            throw new RuntimeException("Appointments not found with id: " + id);
        }
        entity.setId(id);
        return repository.save(entity);
    }

    /**
     * Delete Appointments by ID
     */
    public void delete(Integer id) {
        repository.deleteById(id);
    }

    /**
     * Check if Appointments exists by ID
     */
    public boolean exists(Integer id) {
        return repository.existsById(id);
    }
}
