[* This template generates JPA Entity classes *]
[% for (entity in EntityContext.all) { %]
package [%= entity.packageName %];

import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

import java.io.Serializable;
[* Import Java types based on fields *]
[% for (field in entity.fields) { %]
  [% if (field.javaType = "LocalDateTime" or field.javaType = "LocalDate") { %]
import java.time.[%= field.javaType %];
  [% } %]
  [% if (field.javaType = "UUID") { %]
import java.util.UUID;
  [% } %]
[% } %]
[% if (entity.hasRelationships) { %]
import java.util.List;
import java.util.Set;
[% } %]

/**
 * Entity class for [%= entity.tableName %] table
 * Generated by MDE Backend Generator
 */
@Entity
@Table(name = "[%= entity.tableName %]")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class [%= entity.className %] implements Serializable {

    [* Generate Fields *]
    [% for (field in entity.fields) { %]
    [% if (field.isPrimaryKey) { %]
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    [% } %]
    @Column(name = "[%= field.columnName %]", nullable = [%= field.isNullable %][% if (field.isUnique) { %], unique = true[% } %])
    private [%= field.javaType %] [%= field.fieldName %];
    
    [% } %]

    [* Generate Relationships *]
    [% for (relation in entity.relations) { %]
    [%= relation.relationType %][% if (relation.fetchType.isDefined()) { %](fetch = FetchType.[%= relation.fetchType %])[% } %]
    [% if (relation.isOwner and relation.joinColumnName.isDefined()) { %]
    @JoinColumn(name = "[%= relation.joinColumnName %]")
    [% } %]
    [% if (not relation.isOwner and relation.mappedBy.isDefined()) { %]
    (mappedBy = "[%= relation.mappedBy %]")
    [% } %]
    [% if (relation.relationType.endsWith("ToMany")) { %]
    private List<[%= relation.targetEntity %]> [%= relation.fieldName %];
    [% } else { %]
    private [%= relation.targetEntity %] [%= relation.fieldName %];
    [% } %]
    
    [% } %]
}
[% } %]
