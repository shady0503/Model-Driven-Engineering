[* This template generates docker-compose.yml for the application and database *]
[% var project = ProjectContext.all.first(); %]
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: [%= project.artifactId %]-app
    ports:
      - "8080:8080"
    environment:
      [% if (project.databaseType.toLowerCase() = "postgresql") { %]
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/[%= project.databaseName %]
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      [% } else if (project.databaseType.toLowerCase() = "mysql") { %]
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/[%= project.databaseName %]
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      [% } %]
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      [% if (project.databaseType.toLowerCase() = "postgresql") { %]
      postgres:
        condition: service_healthy
      [% } else if (project.databaseType.toLowerCase() = "mysql") { %]
      mysql:
        condition: service_healthy
      [% } %]
    networks:
      - [%= project.artifactId %]-network
    restart: unless-stopped

  [% if (project.databaseType.toLowerCase() = "postgresql") { %]
  postgres:
    image: postgres:15-alpine
    container_name: [%= project.artifactId %]-db
    environment:
      POSTGRES_DB: [%= project.databaseName %]
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - [%= project.artifactId %]-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

  [% } else if (project.databaseType.toLowerCase() = "mysql") { %]
  mysql:
    image: mysql:8.0
    container_name: [%= project.artifactId %]-db
    environment:
      MYSQL_DATABASE: [%= project.databaseName %]
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - [%= project.artifactId %]-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:

  [% } %]
networks:
  [%= project.artifactId %]-network:
    driver: bridge
