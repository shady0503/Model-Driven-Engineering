[* This template generates a single Service layer class *]
package [%= entity.packageName.replace('.entity', '.service') %];

import [%= entity.packageName %].[%= entity.className %];
import [%= entity.packageName.replace('.entity', '.repository') %].[%= entity.className %]Repository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;

[% var pkType = entity.primaryKey.javaType; %]
[% if (pkType == "UUID") { %]
import java.util.UUID;
[% } %]

/**
 * Service class for [%= entity.className %] entity
 * Generated by MDE Backend Generator
 */
@Service
@Transactional
public class [%= entity.className %]Service {

    private final [%= entity.className %]Repository repository;

    public [%= entity.className %]Service([%= entity.className %]Repository repository) {
        this.repository = repository;
    }

    /**
     * Create a new [%= entity.className %]
     */
    public [%= entity.className %] create([%= entity.className %] entity) {
        return repository.save(entity);
    }

    /**
     * Find [%= entity.className %] by ID
     */
    public Optional<[%= entity.className %]> findById([%= pkType %] id) {
        return repository.findById(id);
    }

    /**
     * Get all [%= entity.className %] entities
     */
    public List<[%= entity.className %]> findAll() {
        return repository.findAll();
    }

    /**
     * Update an existing [%= entity.className %]
     */
    public [%= entity.className %] update([%= pkType %] id, [%= entity.className %] entity) {
        if (!repository.existsById(id)) {
            throw new RuntimeException("[%= entity.className %] not found with id: " + id);
        }
        entity.set[%= entity.primaryKey.fieldName.firstToUpperCase() %](id);
        return repository.save(entity);
    }

    /**
     * Delete [%= entity.className %] by ID
     */
    public void delete([%= pkType %] id) {
        repository.deleteById(id);
    }

    /**
     * Check if [%= entity.className %] exists by ID
     */
    public boolean exists([%= pkType %] id) {
        return repository.existsById(id);
    }
}
